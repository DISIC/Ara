# noVNC
server {

  listen [::]:8080;
  listen 8080;

  # The host name to respond to
  server_name confiture;

  # default dpl
  include dpl/locations/default_dpl.conf;

  # limit conn. and req.
  # TODO by DINUM
  ## limit_req               zone=reqPerSec100 burst=100 nodelay;
  ## limit_conn              conPerIp 100;

  # logging for the server: everything on stdout
  access_log /dev/stdout main;
  error_log /dev/stderr warn;

  # Path for static files
  root /data/confiture;

  # For tests or if we do not want to open it
  #auth_basic            "DINUM private area";
  #auth_basic_user_file  /etc/nginx_user/dpl/htpasswd/dinum.htpasswd;

  # Allow "Well-Known URIs" as per RFC 5785 - and no reverse proxy for it (and also for lets encrypt)
  #location ~* ^/.well-known/ {
  #  auth_basic off;
  #  allow all;
  #}

  # TODO: configure API proxy
  # # reverse proxy for backend
  # location /api/v1/ {

  #   # limit uploads to 100k
  #   client_max_body_size 100k;

  #   # static files expiration
  #   include dpl/locations/expires.conf;

  #   # limit methods
  #   include dpl/limits/methods_REST_confiture.conf;

  #   # use dynamic proxy if we want that a new DNS resolution takes place if upstream server is restarted
  #   # proxy_pass $upstream_backend;
  #   proxy_pass http://backend:8085;

  #   proxy_set_header  Host           $http_host;
  #   proxy_set_header  X-Real-IP      $remote_addr; # pass on real client's IP
  #   proxy_set_header  CLIENT_IP      $remote_addr;
  #   proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
  #   proxy_set_header  X-Forwarded-Proto https;
  #   proxy_read_timeout               900;
  #   proxy_buffers 16 16k;
  #   proxy_buffer_size 16k;

  #   rewrite /api/v1(.*) $1 break;

  # }

}

